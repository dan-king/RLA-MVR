<div>
    <h1><i class="fa fa-check-circle"></i> Mark Ballot</h1>
    {{#if message}}
        <div class="alert alert-info">
            <h3><i class="fa fa-info-circle"></i> {{ message }}</h3>
        </div>
    {{/if }}
</div>

<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title"><a data-toggle="collapse" href="#help-panel" aria-expanded="false" aria-controls="footwear"><span class="fa fa-question-circle"></span> Help</a></h3>
    </div>
    <div class="panel-body collapse" id="help-panel">
        <div class="panel panel-success">
            <div class="panel-heading">
                <h3 class="panel-title">Purpose of Page</h3>
            </div>
            <div class="panel-body">
                <ul>
                    <li>Reviewer #1 - Transfer <span class="text-bold">ballot id</span> and <span class="text-bold"><em>literal</em> ballot selections</span> from selected paper ballot.</li>
                    <li>Reviewer #2 - Verify that values entered by <em>Reviewer #1</em> match the paper ballot. </li>
                </ul>
            </div>
        </div>
        <div class="panel panel-info">
            <div class="panel-heading">
                <h3 class="panel-title">Target Audience</h3>
            </div>
            <div class="panel-body">
                <p>Department of Elections staff</p>
            </div>
        </div>
        <div class="panel panel-warning">
            <div class="panel-heading">
                <h3 class="panel-title">Frequency</h3>
            </div>
            <div class="panel-body">
                <ul>
                    <li>The page is run once per ballot by two reviewers at the same computer.</li>
                    <li>Multiple users on different computers can simultaneously enter ballots.</li>
                </ul>
            </div>
        </div>
    </div>
</div>
<form name="ballot-form" id="ballot-form" action="/ballots/submit-ballot/" method="POST">
<div id="contest-name">
    <span class="text-bold">Contest:</span> Team Mascot
</div>
<div id="ballot-panel" class="panel panel-success">
    <div class="panel-heading">
        <label for="imprinted-id">Imprinted ID:</label>
        <input type="text" name="imprinted-id" id="imprinted-id" value="998"/>
        Enter <em>Imprinted ID</em> manually or select from list:
        <select id="imprinted-id-dropdown" name="imprinted-id-dropdown"></select>
    </div>
    <div class="panel-body">
        <div id="reviewer-1" class="alert alert-warning">
            <h1>Reviewer #1 - Enter choices as marked on paper ballot</h1>
        </div>
        <div id="reviewer-2" class="alert alert-info">
            <h1>Reviewer #2 - Read and verify (Edit as needed)</h1>
        </div>
        <div id="ballot-container" class="container alert alert-warning"></div>
    </div>
    <div class="panel-footer">
        <div>
            <div class="row">
                <div class="col-xs-4">
                    <button type="button" id="submit-button" class="btn btn-warning btn-lg fa fa-arrow-right" onclick="submit_for_verification()"> Submit for Verification</button>
                    <button type="button" id="verified-button" class="btn btn-info btn-lg fa fa-save" onclick="submit_ballot()"> Verified</button>
                </div>
                <div class="col-xs-4">
                    <button type="button" id="edit-button"  class="btn btn-default btn-lg fa fa-edit" onclick="edit_ballot()"> Edit Ballot</button>
                    <button type="button" id="reset-button" class="btn btn-default btn-lg fa fa-refresh" onclick="reset_ballot()"> Clear Ballot</button>
                </div>
                <div class="col-xs-4">
                    <button type="button" id="no-consensus-button" class="btn btn-danger btn-lg fa fa-exclamation-triangle" onclick="alert('TO DO')"> No Consensus</button>
                </div>
            </div>
        </div>
    </div>
</div>
Literal Ballot:<br/>
<textarea rows="5" cols="150" name="ballot_string" id="ballot_string" class="alert alert-warning"/></textarea>
<br/>
Counted Ballot:<br/>
<textarea rows="5" cols="150" name="ballot_string_calc" id="ballot_string_calc" class="alert alert-success"></textarea>
</form>

<!-- Invalid Ballot ID Modal -->
<div class="modal fade" id="invalidBallotModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Invalid Ballot ID</h4>
            </div>
            <div class="modal-body alert alert-danger">
                <p>Please enter a valid ballot id (or select a ballot id from the dropdown).</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>

// ===========================================================
// Page setup functions
// ===========================================================
function populate_ballot_checkboxes() {
    // TODO: Replace these hard-coded ballot details with content from uploaded JSON file.
    num_candidates = 8
    add_header_to_ballot(num_candidates)
    var candidate_num = 1
    var candidate_nam = "Ant"
    var candidate_id = "ant"
    var candidate_img = "/img/candidates/ant.png"
    add_candidate_to_ballot(num_candidates, candidate_num, candidate_nam, candidate_id, candidate_img)
    var candidate_num = 2
    var candidate_nam = "Bee"
    var candidate_id = "bee"
    var candidate_img = "/img/candidates/bee.png"
    add_candidate_to_ballot(num_candidates, candidate_num, candidate_nam, candidate_id, candidate_img)
    var candidate_num = 3
    var candidate_nam = "Cat"
    var candidate_id = "cat"
    var candidate_img = "/img/candidates/cat.png"
    add_candidate_to_ballot(num_candidates, candidate_num, candidate_nam, candidate_id, candidate_img)
    var candidate_num = 4
    var candidate_nam = "Dog"
    var candidate_id = "dog"
    var candidate_img = "/img/candidates/dog.png"
    add_candidate_to_ballot(num_candidates, candidate_num, candidate_nam, candidate_id, candidate_img)
    var candidate_num = 5
    var candidate_nam = "Elk"
    var candidate_id = "elk"
    var candidate_img = "/img/candidates/elk.png"
    add_candidate_to_ballot(num_candidates, candidate_num, candidate_nam, candidate_id, candidate_img)
    var candidate_num = 6
    var candidate_nam = "Fox"
    var candidate_id = "fox"
    var candidate_img = "/img/candidates/fox.png"
    add_candidate_to_ballot(num_candidates, candidate_num, candidate_nam, candidate_id, candidate_img)
    var candidate_num = 7
    var candidate_nam = "Gnu"
    var candidate_id = "gnu"
    var candidate_img = "/img/candidates/gnu.png"
    add_candidate_to_ballot(num_candidates, candidate_num, candidate_nam, candidate_id, candidate_img)
    var candidate_num = 8
    var candidate_nam = "Hog"
    var candidate_id = "hog"
    var candidate_img = "/img/candidates/hog.png"
    add_candidate_to_ballot(num_candidates, candidate_num, candidate_nam, candidate_id, candidate_img)
}
function add_header_to_ballot(number_of_candidates) {
    let ballot_row = document.createElement('div')
    $(ballot_row).addClass('row')
        .appendTo($("#ballot-container"))
    let spacer = document.createElement('div')
    $(spacer).addClass('col-xs-2')
        .html("&nbsp;")
        .appendTo(ballot_row)
    for (var i = 1; i <= number_of_candidates; i++) {
        let ballot_header = document.createElement('div')
        let ordinal = get_ordinal_suffix_of_integer(i)
        $(ballot_header).addClass('col-xs-1').addClass('text-bold')
            .html(ordinal + " Choice")
            .appendTo(ballot_row)
    }
}
function add_candidate_to_ballot(number_of_candidates, candidate_number, candidate_name, candidate_identifier, candidate_image) {
    let d = document.createElement('div')
    $(d).addClass('row')
        .appendTo($("#ballot-container"))

    let candidate = document.createElement('div')
    $(candidate).addClass('col-xs-2')
        .html("<div class='xsmall_image_container'><span class=' xsmall_image_border'><img class='img-circle' src='"+candidate_image+"' width='40'></span><span class='text-bold'>"+candidate_name+"</span>&nbsp;(id:<span class='text-bold'>"+candidate_identifier+"</span>)</div>")
        .appendTo(d)
    for (var i = 1; i <= number_of_candidates; i++) {
        let ballot_checkbox = document.createElement('div')
        let ballot_id = "rank"+i+"_can" + candidate_number
        $(ballot_checkbox).addClass('col-xs-1')
            .html("<div class='checkbox-oval'><input type='checkbox' id='"+ballot_id+"' data-can_id='"+candidate_identifier+"' /><label for='"+ballot_id+"'>&nbsp;</label></div>")
            .appendTo(d)
        //$("#"+ballot_id).data("something")
    }
}
function populate_ballot_dropdown() {
    var ballot_id_list = getSetOfBallots()
    console.log('ballot_id_list', ballot_id_list)
    let dropdown = $('#imprinted-id-dropdown')
    dropdown.empty()
    dropdown.append('<option selected="true" disabled>Choose Imprinted ID</option>')
    dropdown.prop('selectedIndex', 0)

    //$.getJSON(url, function (data) {
    //$.each(data, function (key, entry) {
    // dropdown.append($('<option></option>').attr('value', entry.abbreviation).text(entry.name))

    var ballot_entry_table = ballot_id_list.table

    $.each(ballot_entry_table, function (key, entry) {
        //console.log('key:',key)
        //console.log('entry:',entry)
        let imprinted_id = entry.imprinted_id
        //console.log('imprinted_id',imprinted_id)
        dropdown.append($('<option></option>').attr('value', imprinted_id).text(imprinted_id))
    })
}

// Define set of ballots
function getSetOfBallots() {
    // TODO: replace hard-coded values with input from file
    /*
    TabulatorNum	BatchId	RecordId	ImprintedId
    99808	81	1	99808-81-1
    99808	81	20	99808-81-20*/

    var ballot_id_list = {}
    ballot_id_list.table = []
    for (i=1; i <=20 ; i++){
        let obj = {
            tabulator_num:"99808",
            batch_id:"81",
            record_id:i,
            imprinted_id:"99808-81-"+i
        }
        ballot_id_list.table.push(obj)
    }
    return ballot_id_list
}
function init_layout() {
    $("#reviewer-2").addClass("hidden")
    $("#verified-button").addClass("hidden")
    $("#edit-button").addClass("hidden")
    $("#no-consensus-button").addClass("hidden")
}

// ===========================================================
// UI/UX Workflow Functions
// ===========================================================
function submit_for_verification() {
    // Make sure ballot id is within the set
    var selected_value = $('#imprinted-id').val()
    //console.log('selected_value', selected_value)
    let is_ballot_id_valid = validate_ballot_id(selected_value)
    //console.log('is_ballot_id_valid', is_ballot_id_valid)

    if (is_ballot_id_valid) {
        prepare_ballot_for_review()
    } else {
        $('#invalidBallotModal').modal('show')
    }
}
function submit_for_verification_with_confirmation() {
    // Make sure ballot id is within the set
    var selected_value = $('#imprinted-id').val()
    //console.log('selected_value', selected_value)
    let is_ballot_id_valid = validate_ballot_id(selected_value)
    //console.log('is_ballot_id_valid', is_ballot_id_valid)

    if (is_ballot_id_valid) {
        let message_body = document.createElement('div')
        $(message_body).addClass('alert alert-warning')
        let message_details = document.createElement('div')
        let message_h1 = $('<h1>').text('Reviewer #1 - Confirm Submission').appendTo(message_details)
        var message_div = $('<div>')
            .append('TODO SHOW RANKING RESULTS')
            .appendTo(message_details)
        $(message_details).appendTo(message_body)
        bootbox.confirm({
            size: 'large',
            message: message_body,
            buttons: {
                confirm: {
                    label: 'Confirmed. Submit ballot for verification.',
                    className: 'btn-warning'
                },
                cancel: {
                    label: 'Cancel. Go back to ballot.'
                }
            },
            callback: function (result) {
                //console.log('This was logged in the callback: ' + result)
                if (result) {
                    prepare_ballot_for_review()

                    let message_body = document.createElement('div')
                    $(message_body).addClass('alert alert-info')
                    let message_h1 = $('<h1>').text('Reviewer #2').appendTo(message_body)
                    let message_h2 = $('<h2>').text('The ballot is now read-only. Click "Edit Ballot" to make changes.').appendTo(message_body)
                    bootbox.alert({
                        size: 'large',
                        message: message_body
                    })
                } else {
                    //alert('go back')
                }
            }
        })
    } else {
        $('#invalidBallotModal').modal('show')
    }
}
function prepare_ballot_for_review() {
    // Swap visibility of review names
    $("#reviewer-1").addClass("hidden")
    $("#reviewer-2").removeClass("hidden")
    $("#reviewer-2").addClass("show")

    // Swap submit buttons
    $("#submit-button").addClass("hidden")
    $("#verified-button").removeClass("hidden")
    $("#verified-button").addClass("show")

    // Show/hide 'Edit', 'Clear', 'No Consensus' buttons
    $("#reset-button").addClass("hidden")
    $("#edit-button").removeClass("hidden")
    $("#edit-button").addClass("show")
    $("#no-consensus-button").removeClass("hidden")
    $("#no-consensus-button").addClass("show")

    $("#ballot-container").removeClass("alert-warning")
    $("#ballot-container").addClass("alert-info")

    // Make ballot read-only
    disable_ballot()
}
function reset_ballot() {
    //console.log('reset_ballot')
    $('input[type=checkbox]').prop('checked',false)
    $('#ballot-form input[type=checkbox]').attr('checked',false)
    update_json_preview()
}
function edit_ballot() {
    enable_ballot()
    // show reset
    $("#reset-button").removeClass("hidden")
    $("#reset-button").addClass("show")
    // hide self
    $("#edit-button").addClass("hidden")
}
function disable_ballot() {
    $("input:checkbox").attr('disabled', 'disabled')
    $("#imprinted-id").attr('disabled', 'disabled')
    // TODO Disable ballot id dropdown
}
function enable_ballot() {
    $("input:checkbox").removeAttr('disabled')
    $("#imprinted-id").removeAttr('disabled')
    $("#verified-button").removeClass("btn-info")
    $("#verified-button").addClass("btn-success")
    $("#ballot-container").removeClass("alert-info")
    $("#ballot-container").addClass("alert-success")
    $("#reviewer-2").removeClass("alert-info")
    $("#reviewer-2").addClass("alert-success")
    $("#reviewer-2").html("<h1>Reviewer #2 - Edit and verify</h1>")
    
    //let message_body = document.createElement('div')
    //$(message_body).addClass('alert alert-success')
    //let message_h1 = $('<h1>').text('Reviewer #2').appendTo(message_body)
    //let message_h2 = $('<h2>').text('The ballot is now editable.').appendTo(message_body)
    //bootbox.alert({
    //    size: 'large',
    //    message: message_body
    //})
}
function submit_ballot_without_confirmation() {
    // Make sure ballot id is within the set
    var selected_value = $('#imprinted-id').val()
    console.log('selected_value', selected_value)
    let is_ballot_id_valid = validate_ballot_id(selected_value)
    console.log('is_ballot_id_valid', is_ballot_id_valid)
    if (is_ballot_id_valid) {
        $("#ballot-form").submit()
    } else {
        $('#invalidBallotModal').modal('show')
    }
}
function submit_ballot() {
    // Make sure ballot id is within the set
    var selected_value = $('#imprinted-id').val()
    console.log('selected_value', selected_value)
    let is_ballot_id_valid = validate_ballot_id(selected_value)
    console.log('is_ballot_id_valid', is_ballot_id_valid)
    if (is_ballot_id_valid) {
        let mcvr_json = read_ballot_form()
        $('#ballot_string').val(mcvr_json)
        let counted_json = count_ballot_form()
        $('#ballot_string_calc').text(counted_json)

        let message_body = document.createElement('div')

        $(message_body).addClass('row')
        let d1 = document.createElement('div')
        $(d1).addClass('col-xs-6').appendTo(message_body)
        $(d1).addClass('alert alert-warning')
        var div1 = $('<div>').appendTo(d1)
        var message_h1 = $('<h1>').text('Literal Ballot').appendTo(div1)
        var ul = $('<ul>').appendTo(div1)
        // loop mcvr_json
        var obj = $.parseJSON(mcvr_json)
        var ballot_selections = obj.ballot_selections
        console.log("obj",obj)
        console.log("ballot_selections",ballot_selections)
        ballot_selections.forEach(function(entry) {
            console.log(entry);
            console.log("object.keys", Object.keys(entry));
            for ( var candidate in entry ) {
                console.log("candidate", candidate );
                let rank_choice = entry[candidate]
                rank_choice = get_ordinal_suffix_of_integer(rank_choice)
                console.log("rank_choice", rank_choice );
                li = $('<li>').appendTo(ul)
                span1 = $('<span>').appendTo(li)
                span1.text(rank_choice + ' - ' + candidate )
                var img = $('<img />').attr({
                            'src': '/img/candidates/'+candidate+'.png',
                            'width': 40,
                            'class': 'img-circle'
                        }).appendTo(li)
            }
        });
        let d2 = document.createElement('div')
        $(d2).addClass('col-xs-6').appendTo(message_body)
        $(d2).addClass('alert alert-success')
        var div1 = $('<div>').appendTo(d2)
        var message_h1 = $('<h1>').text('Counted Ballot').appendTo(div1)
        var ul = $('<ul>').appendTo(div1)
        // loop counted_json
        var obj = $.parseJSON(counted_json)
        var ballot_selections = obj.ballot_selections
        console.log("obj",obj)
        console.log("ballot_selections",ballot_selections)
        ballot_selections.forEach(function(entry) {
            console.log(entry);
            console.log("object.keys", Object.keys(entry));
            for ( var candidate in entry ) {
                console.log("candidate", candidate );
                let rank_choice = entry[candidate]
                rank_choice = get_ordinal_suffix_of_integer(rank_choice)
                console.log("rank_choice", rank_choice );
                li = $('<li>').appendTo(ul)
                span1 = $('<span>').appendTo(li)
                span1.text(rank_choice + ' - ' + candidate )
                var img = $('<img />').attr({
                            'src': '/img/candidates/'+candidate+'.png',
                            'width': 40,
                            'class': 'img-circle'
                        }).appendTo(li)
            }
        })
        bootbox.confirm({
            size: 'large',
            message: message_body,
            buttons: {
                confirm: {
                    label: 'Confirmed. Submit ballot.',
                    className: 'btn-info'
                },
                cancel: {
                    label: 'Cancel. Go back to ballot.'
                }
            },
            callback: function (result) {
                //console.log('This was logged in the callback: ' + result)
                if (result) {
                    $("#ballot-form").submit()
                } else {
                    //alert('go back')
                }
            }
        })
    } else {
        $('#invalidBallotModal').modal('show')
    }
}

// ===========================================================
// Read and process ballot form
// ===========================================================
function update_json_preview() {
    let mcvr_json = read_ballot_form()
    $('#ballot_string').val(mcvr_json)
    let counted_json = count_ballot_form()
    $('#ballot_string_calc').text(counted_json)
}
function read_ballot_form() {
    var json_output = ''
    var manual_cvr = {}
    var ballot_id_json = {}
    var ballot_key = "ballot_id"
    var ballot_value = $("#imprinted-id").val()
    ballot_id_json[ ballot_key ] = ballot_value
    var b1 = {}
    var ballot_selections = []
    let n = num_candidates
    for(var i = 1; i <= n; i++) {
        for(var j = 1; j <= n; j++) {
            let varname = "rank" + i + "_can" + j
            //console.log("varname",varname)
            is_checked = $("#"+varname).is(':checked')
            //console.log(varname + "  is checked:",is_checked)
            if (is_checked){
                var bx = {}
                let candidate_id = $('#'+varname).attr('id')
                //console.log('candidate_id',candidate_id)
                let candidate_data = $('#'+candidate_id).attr('data-can_id')
                //console.log('candidate_data',candidate_data)
                bx[candidate_data] = i
                ballot_selections.push(bx)
            }
        }
    }
    manual_cvr = Object.assign({"ballot_selections": ballot_selections}, manual_cvr)
    manual_cvr = Object.assign({"ballot_id": ballot_value}, manual_cvr)
    let mcvr_json = JSON.stringify(manual_cvr)
    return mcvr_json
}
function count_ballot_form() {
    var json_output = ''
    var manual_cvr = {}
    var ballot_id_json = {}
    var ballot_key = "ballot_id"
    var ballot_value = $("#imprinted-id").val()
    ballot_id_json[ ballot_key ] = ballot_value
    var b1 = {}
    var ballot_selections = []
    var candidates_with_vote = []
    let n = num_candidates
    var flag_have_first_choice = false
    var flag_found_overvote = false
    var flag_ballot_invalid = false
    var rank_counter = 1;
    for(var rank = 1; rank <= n; rank++) {
        var flag_have_nth_choice = false
        var flag_okay_write_nth = false
        for(var candidate = 1; candidate <= n; candidate++) {
            let varname = "rank" + rank + "_can" + candidate
            //console.log("varname",varname)
            is_checked = $("#"+varname).is(':checked')
            //console.log(varname + "  is checked:",is_checked)
            if (is_checked){
                // See if have nth choice yet. If not then there is an overvote
                if (flag_have_nth_choice) {
                    flag_found_overvote = true
                    flag_okay_write_nth = false
                    // If there is an overvote before we have first choice then
                    // the ballot is invalid
                    if (!flag_have_first_choice) {
                        // console.log('First choice overvote. Ballot invalid')
                        flag_ballot_invalid = true
                    }
                } else {
                    let candidate_id = $('#'+varname).attr('id')
                    var candidate_data = $('#'+candidate_id).attr('data-can_id')
                    console.log('candidate_id',candidate_id)
                    console.log('candidate_data',candidate_data)
                    // Only include if the candidate has not already been selected.
                    var index = candidates_with_vote.indexOf(candidate_data);
                    console.log('index', index)
                    if (index == -1) {
                        //Toggle flag to say we have nth choice
                        flag_have_nth_choice = true
                        flag_okay_write_nth = true
                        //var bx = {}
                        //bx[candidate_data] = rank
                        candidates_with_vote.push(candidate_data)
                    }
                }
            }
        }
        // only push if we have valid nth choice and no overvote
        if (flag_okay_write_nth && !flag_found_overvote) {
            var bx = {}
            bx[candidate_data] = rank_counter
            rank_counter++
            ballot_selections.push(bx)

            // If not yet first then toggle first
            if (!flag_have_first_choice) flag_have_first_choice = true
        }
    }
    // If ballot is invalid send blank
    if (flag_ballot_invalid) {
        ballot_selections = []
    }
    manual_cvr = Object.assign({"ballot_selections": ballot_selections}, manual_cvr)
    manual_cvr = Object.assign({"ballot_id": ballot_value}, manual_cvr)
    let mcvr_json = JSON.stringify(manual_cvr)
    return mcvr_json
}
function validate_ballot_id(selected_value) {
    var ballot_id_list = getSetOfBallots()
    var ballot_entry_table = ballot_id_list.table
    var found_ballot_id = false
    $.each(ballot_entry_table, function (key, entry) {
        let imprinted_id = entry.imprinted_id
        if (imprinted_id === selected_value) {
            found_ballot_id = true
        }
    })
    $("#ballot-panel").removeClass("panel-success")
    $("#ballot-panel").removeClass("panel-danger")
    if (found_ballot_id) {
        //alert('found it')
        $("#ballot-panel").addClass("panel-success")
    }else {
        //alert('did not find it')
        $("#ballot-panel").addClass("panel-danger")
    }
    return found_ballot_id
}

// ===========================================================
// Functions tied to listeners
// ===========================================================
function on_change_ballot_dropdown(selected_value) {
    $("#imprinted-id").val(selected_value)
    update_json_preview()
}

// ===========================================================
// TODO - put in /lib/helpers.js
// ===========================================================
function get_ordinal_suffix_of_integer(i) {
    let j = i % 10,
        k = i % 100
    if (j == 1 && k != 11) {
        return i + "st"
    }
    if (j == 2 && k != 12) {
        return i + "nd"
    }
    if (j == 3 && k != 13) {
        return i + "rd"
    }
    return i + "th"
}

// ===========================================================
// Initial page load
// ===========================================================
var num_candidates
$(function(){
    populate_ballot_checkboxes()
    populate_ballot_dropdown()
    init_layout()
    update_json_preview()
    // Set up listeners for ballot id text input and dropdown
    $("#imprinted-id").keyup(function(){
        validate_ballot_id($("#imprinted-id").val())
        update_json_preview()
    })
    $('input:checkbox').change(function() {
        update_json_preview()
    })
    $('#imprinted-id-dropdown').change(function() {
        var selected_value = $('#imprinted-id-dropdown').val()
        //console.log('selected_value', selected_value)
        on_change_ballot_dropdown(selected_value)
        validate_ballot_id(selected_value)
    })
})
</script>
